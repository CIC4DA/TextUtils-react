{"version":3,"sources":["Component/Navbar.js","Component/TextForm.js","Component/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","Fragment","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","role","onClick","togglemode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newtext","toUpperCase","showalert","newText","split","join","document","getElementById","select","navigator","clipboard","writeText","filter","trim","length","countWords","prototypes","PropTypes","string","aboutText","defaultProps","Alert","alert","word","lower","toLowerCase","charAt","slice","capitalize","msg","data-bs-dismiss","App","darkmode","setDarkMode","_useState3","_useState4","setAlert","showAlert","message","setTimeout","body","Component_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.751e293b.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n            <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n                </li>\r\n                <li>\r\n                    <Link className=\"nav-link active\" aria-current=\"page\" to=\"/About\">{props.aboutText}</Link>\r\n                </li> */}\r\n               \r\n            </ul>\r\n            <div className={`form-check form-switch text-${props.mode ==='light' ? 'dark' : 'light'}`}>\r\n            <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.togglemode}/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Darkmode</label>\r\n            </div>\r\n            </div>\r\n            </div>\r\n        </nav>\r\n    </>\r\n  )\r\n}\r\n\r\nNavbar.prototypes = {\r\n    title : PropTypes.string,\r\n    aboutText : PropTypes.string,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n    title:\"Set title here\",\r\n    aboutText:\"About\",\r\n}\r\n\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const handleUpClick = () => {\r\n    let newtext = text.toUpperCase();\r\n    setText(newtext);\r\n    props.showalert(\"Converted to UpperCase\",\"success\");\r\n  };\r\n\r\n  const countWords = (text) => {\r\n    return text.split(' ').filter(a => a.trim()).length;\r\n  };\r\n\r\n\r\n  const handleonchange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const handlecopy = ()=>{\r\n    var text = document.getElementById(\"mybox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showalert(\"Text have been copied!\",\"success\");\r\n  }\r\n\r\n  const removeExtraspace = ()=>{\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    \r\n    props.showalert(\"Removed Extra spaces\",\"success\");\r\n  }\r\n\r\n  const cleartext = ()=>{\r\n    setText(\"\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n      >\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"mybox\"\r\n            value={text}\r\n            onChange={handleonchange}\r\n            style={{\r\n              backgroundColor: props.mode === \"dark\" ? \"grey\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n            }}\r\n            rows=\"8\"\r\n          ></textarea>\r\n          <button className=\"btn btn-primary my-3\" onClick={handleUpClick}>\r\n            Convert to Uppercase\r\n          </button>\r\n          <button className=\"btn btn-primary my-3 mx-2\" onClick={removeExtraspace}>\r\n            Remove extra space\r\n          </button>\r\n          <button className=\"btn btn-primary my-3 mx-2\" onClick={handlecopy}>\r\n            Copy Text\r\n          </button>\r\n          <button className=\"btn btn-primary my-3 mx-2\" onClick={cleartext}>\r\n            Clear Text\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"container\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n      >\r\n        <h2>Your Text Summary</h2>\r\n        <p>\r\n          {countWords(text)} words and {text.length} characters\r\n        </p>\r\n        <p>Time required to read -- {0.008 * text.split(\" \").length} </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  \r\n    return (\r\n\r\n        props.alert &&    <>\r\n          <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}!</strong> {props.alert.msg}\r\n            <button\r\n            type=\"button\"\r\n            className=\"btn-close\"\r\n            data-bs-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n            ></button>\r\n        </div>        \r\n        \r\n    </>\r\n  );\r\n}\r\n\r\nexport default Alert","import \"./App.css\";\nimport Navbar from \"./Component/Navbar.js\";\nimport TextForm from \"./Component/TextForm.js\";\nimport React, { useState } from \"react\";\nimport Alert from \"./Component/Alert.js\";\n// import About from \"./Component/About\";\n// import { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n\n  const [darkmode, setDarkMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n\n  const togglemode = () => {\n    if (darkmode === \"light\") {\n      setDarkMode(\"dark\");\n      document.body.style.backgroundColor = \"grey\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = \"TextUtils-Dark Mode\";\n    } else {\n      setDarkMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.title = \"TextUtils-Light Mode\";\n    }\n  };\n\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar title=\"TextUtils\" mode={darkmode} togglemode={togglemode} />\n        <Alert alert={alert} />\n        <div className=\"container\">\n          <TextForm showalert = {showAlert} title = \"TextUtils\" mode={darkmode} heading = \"Enter the Text to analyze, below\" />\n          {/* <Routes> */}\n            {/* <Route path=\"/About\" element={<About/>}></Route> */}\n            {/* <Route path=\"/\" element={<TextForm/>}></Route> */}\n          {/* </Routes> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}